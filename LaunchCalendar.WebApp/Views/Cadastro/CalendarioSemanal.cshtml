@page
@*
    Este é um arquivo CSHTML (Razor Page) que cria um calendário de lançamentos semanal.
    Para fins de demonstração, os dados do calendário são definidos diretamente no código C#
    dentro do bloco @functions. Em uma aplicação real, esses dados viriam de um banco de dados
    através de um serviço e seriam passados para a página como um Model.
*@

@{
    //ViewData["Title"] = "Calendário Semanal";
    var inicioSemana = (DateTime)ViewBag.InicioSemana;
    var filmes = ViewBag.Filmes as List<LaunchCalendar.Domain.Entities.Filme>;
    var episodios = ViewBag.Episodios as List<LaunchCalendar.Domain.Entities.Episodio>;
    var series = ViewBag.SeriesList as List<LaunchCalendar.Domain.Entities.Serie>;
    string[] diasSemana = new[] { "SEG", "TER", "QUA", "QUI", "SEX", "SÁB", "DOM" };
}

<!DOCTYPE html>
<html lang="pt-br">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Calendário de Lançamentos</title>
    <style>
        /* Reset e Configurações Globais */
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, Helvetica, Arial, sans-serif;
            background-color: #f0f2f5;
            color: #1c1e21;
            padding: 20px;
        }

        /* Container Principal */
        .calendar-container {
            max-width: 1400px;
            margin: 0 auto;
            background-color: #ffffff;
            border-radius: 8px;
            box-shadow: 0 2px 8px rgba(0,0,0,0.1);
            overflow: hidden;
        }

        /* Cabeçalho */
        .calendar-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            padding: 16px 24px;
            background-color: #F58220; /* Laranja da imagem */
            color: white;
            font-weight: bold;
        }

            .calendar-header .title, .calendar-header .season {
                display: flex;
                align-items: center;
                gap: 8px;
                font-size: 1rem;
            }

            .calendar-header svg {
                width: 20px;
                height: 20px;
                fill: currentColor;
            }

        /* Abas de Filtro */
        .filter-tabs {
            display: flex;
            justify-content: center;
            gap: 20px;
            padding: 16px;
            border-bottom: 1px solid #ddd;
        }

            .filter-tabs button {
                background: none;
                border: none;
                border-bottom: 2px solid transparent;
                padding: 8px 4px;
                cursor: pointer;
                font-size: 0.9rem;
                font-weight: 600;
                color: #666;
                transition: color 0.2s, border-color 0.2s;
            }

                .filter-tabs button.active {
                    color: #F58220;
                    border-bottom-color: #F58220;
                }

        /* Wrapper da Grade para Navegação */       
        .schedule-grid-wrapper {
            display: flex;
            align-items: center;
            padding: 0 10px;
        }

        .nav-arrow {
            background: #f0f2f5;
            border: 1px solid #ccc;
            border-radius: 50%;
            width: 36px;
            height: 36px;
            display: flex;
            align-items: center;
            justify-content: center;
            cursor: pointer;
            transition: background-color 0.2s;
        }

            .nav-arrow:hover {
                background-color: #e0e0e0;
            }

            .nav-arrow svg {
                width: 20px;
                height: 20px;
                fill: #333;
            }

        /* Grade do Calendário */
        .schedule-grid {
            flex-grow: 1;
            display: grid;
            grid-template-columns: repeat(7, 1fr);
            gap: 8px;
            padding: 16px;
            overflow-x: auto; /* Permite rolagem horizontal em telas pequenas */
        }

        .day-column {
            min-width: 160px; /* Largura mínima para cada coluna */
        }

        .day-header {
            padding-bottom: 12px;
            margin-bottom: 12px;
            border-bottom: 2px solid #eee;
            text-align: center;
        }

            .day-header .date {
                font-size: 0.9rem;
                color: #666;
            }

            .day-header .day-name {
                font-size: 1.1rem;
                font-weight: bold;
                color: #333;
            }

        /* Lista de Lançamentos */
        .schedule-list {
            list-style: none;
        }

        .schedule-item {
            display: flex;
            position: relative;
            padding-bottom: 20px;
        }

        /* Linha do tempo (ponto e linha vertical) */
        .timeline {
            position: relative;
            width: 20px;
            flex-shrink: 0;
        }

            .timeline::before { /* Linha vertical */
                content: '';
                position: absolute;
                top: 5px;
                left: 4px;
                width: 2px;
                height: 100%;
                background-color: #ddd;
            }

            .timeline::after { /* Ponto */
                content: '';
                position: absolute;
                top: 0;
                left: 0;
                width: 10px;
                height: 10px;
                border-radius: 50%;
                background-color: #ccc;
            }

        .item-content {
            flex-grow: 1;
        }

            .item-content .time {
                font-size: 0.8rem;
                color: #666;
                margin-bottom: 4px;
            }

            .item-content .title {
                font-weight: 600;
                font-size: 0.95rem;
                color: #1c1e21;
                margin-bottom: 4px;
            }

            .item-content .subtitle {
                font-size: 0.85rem;
                color: #555;
            }

        .item-image {
            width: 100%;
            border-radius: 4px;
            margin-top: 12px;
        }

        /* Flâmula para item Premium */
        .premium-flag {
            position: absolute;
            top: 0;
            right: 10px;
            width: 16px;
            height: 20px;
            background-color: #F58220;
            clip-path: polygon(0 0, 100% 0, 100% 100%, 50% 80%, 0 100%);
        }


        .nav-arrow {
            display: none;
        }

        .schedule-grid {
            /* A rolagem já está habilitada com overflow-x: auto */
            padding: 16px 0;
        }

        }



        .calendar-header {
            padding: 12px;
            font-size: 0.9rem;
        }

        .filter-tabs button {
            font-size: 0.8rem;
        }

        }
    </style>
</head>
<body>

    <div class="calendar-container">
        <header class="calendar-header">
            <div class="title">
                <svg viewBox="0 0 24 24"><path d="M4 4h4v4H4zm6 0h4v4h-4zm6 0h4v4h-4zM4 10h4v4H4zm6 0h4v4h-4zm6 0h4v4h-4zM4 16h4v4H4zm6 1h4v2h-4zm6 0h4v4h-4z"></path></svg>
                <span>CALENDÁRIO DE LANÇAMENTOS</span>
            </div>
            <div class="season">
                <svg viewBox="0 0 24 24"><path d="M19 4h-1V2h-2v2H8V2H6v2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V6c0-1.1-.9-2-2-2zm0 16H5V10h14v10zM5 8V6h14v2H5z"></path></svg>
                <span>PROGRAMAÇÃO DE VERÃO 2025</span>
            </div>
        </header>

        <div class="schedule-grid-wrapper">
            <button class="nav-arrow left-arrow" aria-label="Semana anterior">
                <svg viewBox="0 0 24 24"><path d="M15.41 7.41L14 6l-6 6 6 6 1.41-1.41L10.83 12z"></path></svg>
            </button>

            <main class="schedule-grid">
                @for (int i = 0; i < 7; i++)
                {
                    var dia = inicioSemana.AddDays(i).Date;
                    <div class="day-column">
                        <header class="day-header">
                            <div class="date">@dia.ToString("dd/MM")</div>
                            <div class="day-name">@diasSemana[i]</div>
                        </header>
                        <ul class="schedule-list">
                            @* Filmes *@
                            @foreach (var filme in filmes.Where(f => f.DataLancamento.Date == dia))
                            {
                                <li class="schedule-item">
                                    <div class="timeline"></div>
                                    <div class="item-content">
                                        <div class="time">@filme.DataLancamento.ToString("HH:mm")</div>
                                        <div class="title">@filme.Titulo</div>
                                        <div class="subtitle">Filme - @filme.Genero</div>
                                    </div>
                                </li>
                            }
                            @* Episódios *@
                            @foreach (var ep in episodios.Where(e => e.DataLancamento.Date == dia))
                            {
                                var serieNome = ep.Serie?.Titulo ?? (series?.FirstOrDefault(s => s.SerieId == ep.SerieId)?.Titulo ?? "Série");
                                <li class="schedule-item">
                                    <div class="timeline"></div>
                                    <div class="item-content">
                                        <div class="time">@ep.DataLancamento.ToString("HH:mm")</div>
                                        <div class="title">@serieNome</div>
                                        <div class="subtitle">Ep. @ep.Numero - @ep.Titulo</div>
                                    </div>
                                </li>
                            }
                        </ul>
                    </div>
                }
            </main>

            <button class="nav-arrow right-arrow" aria-label="Próxima semana">
                <svg viewBox="0 0 24 24"><path d="M8.59 16.59L10 18l6-6-6-6-1.41 1.41L13.17 12z"></path></svg>
            </button>
        </div>
    </div>

</body>
</html>